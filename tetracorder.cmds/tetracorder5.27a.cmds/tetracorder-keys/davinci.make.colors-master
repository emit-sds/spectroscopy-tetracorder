#!/usr/local/bin/davinci -f

# A master color set.  Just read in the files, assign the colors
# and write the results.    R. Clark 4/16/2015

# first read file to be colored, assign variables
# a1 a2 a2 etc

# create RGB color multiplier variables
argb =  create(1,1,3, format=FLOAT, start=0.0, step=0.0)

# /info/COLORS.screen.to.printers
#
#      "color"         r    g    b
#    1 red            255   60    0   (255   50    0 better)
#    2 green           60  255    0   ( 50  255    0 better)
#    3 blue             0  105  255
   
#    4 yellow         255  255    0
#    5 magenta        205   60  255   (205   40  255 better)
#    6 cyan             0  255  255
  
#    7 army green     150  165    0   (160  175    0 better?)
#    8 salmon         255  170  170
#    9 flesh          255  200  155
  
#   10 orange         255  110    0   (255  120    0 better?)
#   11 deep pink      235    0  180
#   12 yellow green   190  255    0

#   13 lavender       185  120  255
#   14 sky blue       140  210  255
#   15 pale sea green 110  255  190
  
#   16 white          255  255  255
#   17 red-pink       255  125  125
#   18 gold           255  213    0

#   19 mud yellow     186  165    0
#   20 light pink     255  211  255


# Colors:
#              Red                  Green                Blue    color variable name

argb[1,1,1] =  255. ; argb[1,1,2]=    50. ;  argb[1,1,3]=   0. ; c_red          = argb  # red
argb[1,1,1] =   50. ; argb[1,1,2]=   255. ;  argb[1,1,3]=   0. ; c_green        = argb  # green
argb[1,1,1] =    0. ; argb[1,1,2]=   105. ;  argb[1,1,3]= 255. ; c_blue         = argb  # blue

argb[1,1,1] =  255. ; argb[1,1,2]=   255. ;  argb[1,1,3]=   0. ; c_yellow       = argb  # yellow
argb[1,1,1] =  255. ; argb[1,1,2]=    40. ;  argb[1,1,3]= 255. ; c_magenta      = argb  # magenta
argb[1,1,1] =    0. ; argb[1,1,2]=   255. ;  argb[1,1,3]= 255. ; c_cyan         = argb  # cyan

argb[1,1,1] =  150. ; argb[1,1,2]=   165. ;  argb[1,1,3]=   0. ; c_armygreen    = argb  # army green
argb[1,1,1] =  255. ; argb[1,1,2]=   170. ;  argb[1,1,3]= 170. ; c_salmon       = argb  # salmon
argb[1,1,1] =  255. ; argb[1,1,2]=   200. ;  argb[1,1,3]= 155. ; c_flesh        = argb  # flesh

argb[1,1,1] =  255. ; argb[1,1,2]=   120. ;  argb[1,1,3]=   0. ; c_orange       = argb  # orange
argb[1,1,1] =  235. ; argb[1,1,2]=     0. ;  argb[1,1,3]= 180. ; c_deeppink     = argb  # deep pink
argb[1,1,1] =  190. ; argb[1,1,2]=   255. ;  argb[1,1,3]=   0. ; c_yellowgreen  = argb  # yellow green

argb[1,1,1] =  185. ; argb[1,1,2]=   120. ;  argb[1,1,3]= 255. ; c_lavender     = argb  # lavender
argb[1,1,1] =  140. ; argb[1,1,2]=   210. ;  argb[1,1,3]= 255. ; c_skyblue      = argb  # sky blue
argb[1,1,1] =  110. ; argb[1,1,2]=   255. ;  argb[1,1,3]= 190. ; c_paleseagreen = argb  # pale sea green

argb[1,1,1] =  255. ; argb[1,1,2]=   255. ;  argb[1,1,3]= 255. ; c_white        = argb  # white
argb[1,1,1] =  255. ; argb[1,1,2]=   125. ;  argb[1,1,3]= 125. ; c_redpink      = argb  # red-pink
argb[1,1,1] =  255. ; argb[1,1,2]=   213. ;  argb[1,1,3]=   0. ; c_gold         = argb  # gold

argb[1,1,1] =  186. ; argb[1,1,2]=   165. ;  argb[1,1,3]=   0. ; c_mudyellow    = argb  # mud yellow
argb[1,1,1] =  255. ; argb[1,1,2]=   211. ;  argb[1,1,3]= 255. ; c_lightpink    = argb  # light pink


xaz=float(a1*0)

xaz= xaz + a1*( c_red      /255.)   # example material 1
xaz= xaz + a2*( c_green    /255.)   # example material 2
xaz= xaz + a3*( c_blue     /255.)   # example material 3
xaz= xaz + a4*( c_yellow   /255.)   # example material 4
xaz= xaz + a5*( c_magenta  /255.)   # example material 5
xaz= xaz + a6*( c_cyan     /255.)   # example material 6
xaz= xaz + a7*( c_orange   /255.)   # example material 7

xout=byte(xaz+0.5)   # final output image, 3 bands, color

gbasedim=dim(gbase)  # base image width (in case we read dual width images above, this gives a single width image
x=gbasedim[1,,]

xout[1:x,,] = gbase[1:x,,]

fout=$2 + "_color-results_water-a.jpg"    # output file name

write (xout, filename=fout, type=jpg)

